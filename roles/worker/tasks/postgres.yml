---
- name: Install required packages
  become: true
  ansible.builtin.apt:
    state: present
    update_cache: true
    name: docker.io

- name: Create group docker
  become: true
  ansible.builtin.group:
    name: docker
    state: present

- name: Add user to docker group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_facts.env.USER }}"
    groups: docker
    append: true

- name: Download docker-compose setup script
  ansible.builtin.get_url:
    url: https://gist.githubusercontent.com/kamuridesu/d8be27b388f54c221a2889e7a94943c3/raw/a46a54047488d7f571459784f4ea5c707f050c68/docker-compose.sh
    dest: /tmp/docker-compose.sh
    mode: '0755'

- name: Setup docker compose
  become: true
  ansible.builtin.command:
    cmd: /bin/bash -c 'set -o pipefail && sh /tmp/docker-compose.sh'
  args:
    creates: /usr/local/bin/docker-compose

- name: Create postgres folder
  become: true
  become_user: "{{ ansible_facts.env.USER }}"
  ansible.builtin.file:
    path: "/home/{{ ansible_facts.env.USER }}/postgres"
    state: directory
    mode: '0755'

- name: Copy the docker-compose over
  become: true
  become_user: "{{ ansible_facts.env.USER }}"
  ansible.builtin.copy:
    src: files/postgres/replica/docker-compose.yml
    dest: "/home/{{ ansible_facts.env.USER }}/postgres/docker-compose.yml"
    mode: '0644'

# - name: Restart docker service
#   ansible.builtin.systemd:
#     name: docker
#     state: restarted

- name: Deploy container
  become: true
  community.docker.docker_compose_v2:
    project_src: "/home/{{ ansible_facts.env.USER }}/postgres/"
    state: present
